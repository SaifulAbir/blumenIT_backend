# Generated by Django 4.0 on 2022-01-04 07:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ProductBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'ProductBrand',
                'verbose_name_plural': 'ProductBrands',
                'db_table': 'productBrands',
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'ProductCategory',
                'verbose_name_plural': 'ProductCategories',
                'db_table': 'productCategory',
            },
        ),
        migrations.CreateModel(
            name='ProductColors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'ProductColor',
                'verbose_name_plural': 'ProductColors',
                'db_table': 'productColors',
            },
        ),
        migrations.CreateModel(
            name='ProductSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'ProductSize',
                'verbose_name_plural': 'ProductSizes',
                'db_table': 'productSizes',
            },
        ),
        migrations.CreateModel(
            name='ProductTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'ProductTag',
                'verbose_name_plural': 'ProductTags',
                'db_table': 'productTags',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=500)),
                ('slug', models.SlugField(allow_unicode=True)),
                ('price', models.FloatField(max_length=255)),
                ('old_price', models.FloatField(blank=True, max_length=255, null=True)),
                ('full_description', models.TextField()),
                ('short_description', models.CharField(max_length=800)),
                ('quantity', models.BigIntegerField(blank=True, default=0, null=True)),
                ('quantity_left', models.BigIntegerField(blank=True, default=0, help_text='Automatic quantity decreased after order placed. Leave it empty for unlimited/manual quantity of the product.', null=True)),
                ('thumbnail', models.ImageField(upload_to='images/product_thumbnail_images')),
                ('warranty', models.CharField(blank=True, help_text='eg: 1 year or 6 months', max_length=255)),
                ('variation', models.CharField(blank=True, max_length=255)),
                ('rating', models.CharField(blank=True, max_length=255)),
                ('status', models.CharField(max_length=255)),
                ('is_featured', models.BooleanField(default=False)),
                ('brand_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='brand', to='product.productbrand')),
                ('category', models.ManyToManyField(blank=True, related_name='category_product', to='product.ProductCategory')),
                ('colors', models.ManyToManyField(blank=True, related_name='product_colors', to='product.ProductColors')),
                ('related_products', models.ManyToManyField(blank=True, related_name='related_products', to='product.Product')),
                ('sizes', models.ManyToManyField(blank=True, to='product.ProductSize')),
                ('tags', models.ManyToManyField(blank=True, related_name='product_tags', to='product.ProductTags')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'db_table': 'products',
            },
        ),
    ]
