# Generated by Django 4.0 on 2022-11-20 04:08

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import product.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0001_initial'),
        ('vendor', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(default='', help_text='name', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Attribute',
                'verbose_name_plural': 'Attributes',
                'db_table': 'attribute',
            },
        ),
        migrations.CreateModel(
            name='AttributeValues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('value', models.CharField(default='', max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attribute_values_attribute', to='product.attribute')),
            ],
            options={
                'verbose_name': 'AttributeValues',
                'verbose_name_plural': 'AttributeValues',
                'db_table': 'attribute_attribute',
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=100)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='brand')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Brand',
                'verbose_name_plural': 'Brands',
                'db_table': 'brand',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(default='', help_text='name', max_length=100)),
                ('ordering_number', models.IntegerField(default=0)),
                ('type', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('banner', models.ImageField(blank=True, null=True, upload_to='product_category')),
                ('icon', models.ImageField(blank=True, null=True, upload_to='product_category')),
                ('is_active', models.BooleanField(default=True)),
                ('subtitle', models.TextField(blank=True, default='', null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='product_category')),
                ('cover', models.ImageField(blank=True, null=True, upload_to='product_category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(default='', max_length=255)),
                ('color_code', models.CharField(default='', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Color',
                'verbose_name_plural': 'Colors',
                'db_table': 'color',
            },
        ),
        migrations.CreateModel(
            name='DiscountTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(default='', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'DiscountType',
                'verbose_name_plural': 'DiscountTypes',
                'db_table': 'discount_types',
            },
        ),
        migrations.CreateModel(
            name='FlashDealInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(default='', max_length=255)),
                ('background_color', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('banner', models.ImageField(blank=True, null=True, upload_to='flash_deal_info')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'FlashDealInfo',
                'verbose_name_plural': 'FlashDealInfos',
                'db_table': 'flash_deal_info',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(default='', max_length=800)),
                ('slug', models.SlugField(allow_unicode=True, blank=True, max_length=255)),
                ('minimum_purchase_quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('bar_code', models.CharField(default='', max_length=255)),
                ('refundable', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('cash_on_delivery', models.BooleanField(default=False)),
                ('todays_deal', models.BooleanField(default=False)),
                ('shipping_time', models.IntegerField(default=0, help_text='eg: Days in count.')),
                ('full_description', models.TextField(default='')),
                ('short_description', models.CharField(default='', max_length=800)),
                ('active_short_description', models.BooleanField(default=True)),
                ('price', models.FloatField(default=0, help_text='Unit price', max_length=255)),
                ('pre_payment_amount', models.FloatField(default=0, max_length=255)),
                ('discount_start_date', models.DateTimeField(blank=True, null=True)),
                ('discount_end_date', models.DateTimeField(blank=True, null=True)),
                ('discount_amount', models.FloatField(blank=True, default=0, max_length=255, null=True)),
                ('quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('total_quantity', models.IntegerField(default=0)),
                ('sku', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('external_link', models.URLField(blank=True, null=True)),
                ('external_link_button_text', models.CharField(blank=True, max_length=500, null=True)),
                ('video_link', models.URLField(blank=True, null=True)),
                ('thumbnail', models.FileField(blank=True, null=True, upload_to='products')),
                ('low_stock_quantity_warning', models.IntegerField(blank=True, default=0, null=True)),
                ('show_stock_quantity', models.BooleanField(default=False)),
                ('vat', models.IntegerField(blank=True, default=0, null=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PUBLISH', 'Publish'), ('UNPUBLISH', 'UnPublish')], default='DRAFT', max_length=20)),
                ('digital', models.BooleanField(default=False)),
                ('in_house_product', models.BooleanField(default=False)),
                ('sell_count', models.BigIntegerField(blank=True, default=0, null=True)),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_brand', to='product.brand')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_category', to='product.category')),
                ('discount_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_discount_type', to='product.discounttypes')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'db_table': 'products',
            },
        ),
        migrations.CreateModel(
            name='ProductAttributes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('attribute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_attributes_attribute', to='product.attribute')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_attributes_product', to='product.product')),
            ],
            options={
                'verbose_name': 'ProductAttribute',
                'verbose_name_plural': 'ProductAttributes',
                'db_table': 'product_attributes',
            },
        ),
        migrations.CreateModel(
            name='ProductCombinations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product_attribute_value', models.CharField(default='', max_length=500)),
                ('product_attribute_price', models.FloatField(blank=True, default=0, max_length=255, null=True)),
                ('product_attribute_color_code', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_combinations_product', to='product.product')),
                ('product_attribute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_combinations_product_attributes', to='product.productattributes')),
            ],
            options={
                'verbose_name': 'ProductCombination',
                'verbose_name_plural': 'ProductCombinations',
                'db_table': 'product_combinations',
            },
        ),
        migrations.CreateModel(
            name='ProductCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(default='', help_text='name', max_length=800)),
            ],
            options={
                'verbose_name': 'ProductCondition',
                'verbose_name_plural': 'ProductConditions',
                'db_table': 'product_condition',
            },
        ),
        migrations.CreateModel(
            name='ProductVideoProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(default='', help_text='name', max_length=800)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'ProductVideoProvider',
                'verbose_name_plural': 'ProductVideoProviders',
                'db_table': 'product_video_provider',
            },
        ),
        migrations.CreateModel(
            name='ShippingClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(default='', help_text='name', max_length=800)),
                ('description', models.TextField(default='')),
                ('delivery_charge', models.FloatField(default=0, max_length=255)),
            ],
            options={
                'verbose_name': 'ShippingClass',
                'verbose_name_plural': 'ShippingClasses',
                'db_table': 'shipping_class',
            },
        ),
        migrations.CreateModel(
            name='Specification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='specification_product', to='product.product')),
            ],
            options={
                'verbose_name': 'Specification',
                'verbose_name_plural': 'Specifications',
                'db_table': 'specification',
            },
        ),
        migrations.CreateModel(
            name='SpecificationTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(default='', help_text='name', max_length=800)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'SpecificationTitle',
                'verbose_name_plural': 'SpecificationTitles',
                'db_table': 'specification_title',
            },
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(default='', help_text='name', max_length=100)),
                ('ordering_number', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sub_category_category', to='product.category')),
            ],
            options={
                'verbose_name': 'SubCategory',
                'verbose_name_plural': 'SubCategories',
                'db_table': 'sub_category',
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(default='', max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'db_table': 'tags',
            },
        ),
        migrations.CreateModel(
            name='TextColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(default='', max_length=255)),
                ('code', models.CharField(default='', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'TextColor',
                'verbose_name_plural': 'TextColors',
                'db_table': 'text_color',
            },
        ),
        migrations.CreateModel(
            name='Units',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(default='', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Unit',
                'verbose_name_plural': 'Units',
                'db_table': 'units',
            },
        ),
        migrations.CreateModel(
            name='VariantType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(default='', max_length=500)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'VariantType',
                'verbose_name_plural': 'VariantTypes',
                'db_table': 'variant_types',
            },
        ),
        migrations.CreateModel(
            name='VatType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(default='', help_text='name', max_length=800)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'VatType',
                'verbose_name_plural': 'VatTypes',
                'db_table': 'vat_type',
            },
        ),
        migrations.CreateModel(
            name='SubSubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(default='', help_text='name', max_length=100)),
                ('ordering_number', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sub_sub_category_category', to='product.category')),
                ('sub_category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sub_sub_category_sub_category', to='product.subcategory')),
            ],
            options={
                'verbose_name': 'SubSubCategory',
                'verbose_name_plural': 'SubSubCategories',
                'db_table': 'sub_sub_category',
            },
        ),
        migrations.CreateModel(
            name='SpecificationValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('key', models.CharField(default='', max_length=800)),
                ('value', models.CharField(default='', max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='specification_value_product', to='product.product')),
                ('specification', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='specification_specification', to='product.specification')),
            ],
            options={
                'verbose_name': 'SpecificationValue',
                'verbose_name_plural': 'SpecificationValues',
                'db_table': 'specification_value',
            },
        ),
        migrations.AddField(
            model_name='specification',
            name='title',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='specification_specification_title', to='product.specificationtitle'),
        ),
        migrations.CreateModel(
            name='ProductVariation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('variation', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('variation_price', models.FloatField(blank=True, default=0, null=True)),
                ('sku', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('total_quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('image', models.FileField(blank=True, null=True, upload_to='product_variation', validators=[product.models.ProductVariation.validate_file_extension])),
                ('total_price', models.FloatField(blank=True, default=0, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Product_variation_product', to='product.product')),
            ],
            options={
                'verbose_name': 'ProductVariation',
                'verbose_name_plural': 'ProductVariations',
                'db_table': 'product_variation',
            },
        ),
        migrations.CreateModel(
            name='ProductTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('product', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='product_tags_product', to='product.product')),
                ('tag', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_tags_product', to='product.tags')),
            ],
            options={
                'verbose_name': 'ProductTag',
                'verbose_name_plural': 'ProductTags',
                'db_table': 'product_tags',
            },
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rating_number', models.IntegerField(default=0)),
                ('review_text', models.TextField(blank=True, default='', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_review_product', to='product.product')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_review_user', to='user.user')),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_review_vendor', to='vendor.vendor')),
            ],
            options={
                'verbose_name': 'ProductReview',
                'verbose_name_plural': 'ProductReviews',
                'db_table': 'product_review',
            },
        ),
        migrations.CreateModel(
            name='ProductMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('COMPLETE', 'Complete'), ('IN_QUEUE', 'In_Queue'), ('IN_PROCESSING', 'In_Processing')], default='COMPLETE', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_media_product', to='product.product')),
            ],
            options={
                'verbose_name': 'ProductMedia',
                'verbose_name_plural': 'ProductMedias',
                'db_table': 'product_medias',
            },
        ),
        migrations.CreateModel(
            name='ProductImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file', models.FileField(upload_to='products', validators=[product.models.ProductImages.validate_file_extension])),
                ('status', models.CharField(choices=[('COMPLETE', 'Complete'), ('IN_QUEUE', 'In_Queue'), ('IN_PROCESSING', 'In_Processing')], default='COMPLETE', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_image_product', to='product.product')),
            ],
            options={
                'verbose_name': 'ProductImage',
                'verbose_name_plural': 'ProductImages',
                'db_table': 'product_images',
            },
        ),
        migrations.CreateModel(
            name='ProductCombinationsVariants',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('variant_value', models.CharField(blank=True, max_length=500, null=True)),
                ('variant_price', models.FloatField(blank=True, default=0, max_length=255, null=True)),
                ('quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('discount_amount', models.FloatField(blank=True, default=0, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('discount_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_combinations_variant_discount_type', to='product.discounttypes')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_combinations_variant_product', to='product.product')),
                ('product_combination', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_combinations_variant_product_combination', to='product.productcombinations')),
                ('variant_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_combinations_variant_variant_type', to='product.varianttype')),
            ],
            options={
                'verbose_name': 'ProductCombinationsVariant',
                'verbose_name_plural': 'ProductCombinationsVariants',
                'db_table': 'product_combinations_variant',
            },
        ),
        migrations.CreateModel(
            name='ProductCombinationMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file', models.FileField(upload_to='products', validators=[product.models.ProductCombinationMedia.validate_file_extension])),
                ('status', models.CharField(choices=[('COMPLETE', 'Complete'), ('IN_QUEUE', 'In_Queue'), ('IN_PROCESSING', 'In_Processing')], default='COMPLETE', max_length=20)),
                ('product_combination', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_media_product_combination', to='product.productcombinations')),
            ],
            options={
                'verbose_name': 'ProductCombinationMedia',
                'verbose_name_plural': 'ProductCombinationMedias',
                'db_table': 'product_combination_medias',
            },
        ),
        migrations.CreateModel(
            name='ProductColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('color', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_color_color', to='product.color')),
                ('product', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='product_color_product', to='product.product')),
            ],
            options={
                'verbose_name': 'ProductColor',
                'verbose_name_plural': 'ProductColors',
                'db_table': 'product_color',
            },
        ),
        migrations.CreateModel(
            name='ProductAttributeValues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_attributes_values_product', to='product.product')),
                ('product_attribute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_attribute_values_product_attribute', to='product.productattributes')),
                ('value', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_attribute_values_value', to='product.attributevalues')),
            ],
            options={
                'verbose_name': 'ProductAttributeValue',
                'verbose_name_plural': 'ProductAttributeValues',
                'db_table': 'product_attribute_value',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='product_condition',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_product_condition', to='product.productcondition'),
        ),
        migrations.AddField(
            model_name='product',
            name='seller',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_seller', to='vendor.seller'),
        ),
        migrations.AddField(
            model_name='product',
            name='shipping_class',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_shipping_class', to='product.shippingclass'),
        ),
        migrations.AddField(
            model_name='product',
            name='sub_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_sub_category', to='product.subcategory'),
        ),
        migrations.AddField(
            model_name='product',
            name='sub_sub_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_sub_sub_category', to='product.subsubcategory'),
        ),
        migrations.AddField(
            model_name='product',
            name='unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_unit', to='product.units'),
        ),
        migrations.AddField(
            model_name='product',
            name='vat_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_vat_type', to='product.vattype'),
        ),
        migrations.AddField(
            model_name='product',
            name='video_provider',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_video_provider', to='product.productvideoprovider'),
        ),
        migrations.CreateModel(
            name='InventoryVariation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('variation_initial_quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('variation_current_quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inventory_variation_product', to='product.product')),
                ('product_variation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='inventory_variation_product_variation', to='product.productvariation')),
            ],
            options={
                'verbose_name': 'InventoryVariation',
                'verbose_name_plural': 'InventoryVariations',
                'db_table': 'inventory_variation',
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('initial_quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('current_quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inventory_product', to='product.product')),
            ],
            options={
                'verbose_name': 'Inventory',
                'verbose_name_plural': 'Inventories',
                'db_table': 'inventory',
            },
        ),
        migrations.CreateModel(
            name='FlashDealProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('discount_amount', models.FloatField(blank=True, default=0, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('discount_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='flash_deal_product_discount_type', to='product.discounttypes')),
                ('flash_deal_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='flash_deal_product_flash_deal_info', to='product.flashdealinfo')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='flash_deal_product_product', to='product.product')),
            ],
            options={
                'verbose_name': 'FlashDealProduct',
                'verbose_name_plural': 'FlashDealProducts',
                'db_table': 'flash_deal_product',
            },
        ),
        migrations.AddField(
            model_name='flashdealinfo',
            name='text_color',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='flash_deal_info_text_color', to='product.textcolor'),
        ),
        migrations.CreateModel(
            name='CategoryFilterAttributes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('attribute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='category_filter_attributes_attribute', to='product.attribute')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='category_filter_attributes_category', to='product.category')),
            ],
            options={
                'verbose_name': 'CategoryFilterAttribute',
                'verbose_name_plural': 'CategoryFilterAttributes',
                'db_table': 'category_filter_attributes',
            },
        ),
    ]
